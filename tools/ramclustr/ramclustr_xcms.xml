<tool id="ramclustr_xcms" name="RAMClustR (XCMS)" version="@TOOL_VERSION@+galaxy1">
    <macros>
        <import>ramclustr_macros.xml</import>
    </macros>

    <requirements>
        <container type="docker">recetox/ramclustr:1.1.0-recetox0</container>
    </requirements>

    <inputs>
        <param name="input_xcms" label="input_xcms" type="data" format="RData" help=": containing grouped feature data for clustering by ramclustR" />
        <expand macro="parameters_required" />
        <expand macro="parameters_optional" />
    </inputs>

    <command detect_errors="aggressive"><![CDATA[
    
        Rscript 
            -e 'obj <- load("$input_xcms")'
            -e 'x <- RAMClustR::ramclustR(
                xcmsObj = xdata,
                #if $optional.st 
                    st = $optional.st,
                #end if
                #if $optional.maxt 
                    maxt = $optional.maxt,
                #end if
                sr = $required.sr,
                deepSplit = $required.deepSplit,
                blocksize = $required.blocksize,
                mult = $required.mult,
                hmax = $required.hmax,
                collapse = $required.collapse,
                usePheno = $required.usePheno,
                mspout = FALSE,
                qc.inj.range = $required.qc_inj_range,
                normalize = "$required.normalize",
                minModuleSize = $required.minModuleSize,
                linkage = "$required.linkage",
                mzdec = $required.mzdec,
                cor.method = "$required.cor_method",
                rt.only.low.n = $required.rt_only_low_n,
                #if $optional.fftempdir 
                    fftempdir = $optional.fftempdir,
                #end if
                replace.zeros = $required.replace_zeros
                )'
            -e 'save(x, file = "$result")'
            -e 'RAMClustR::write.methods(x, "$method_metadata")'
            -e 'RAMClustR::write.msp(x, one.file = $required.merge_msp)'
            -e 'write.csv(x\$SpecAbund, file="$spec_abundance", row.names=TRUE)'
    ]]>
    </command>

    <outputs>
        <data label="${tool.name} on ${on_string}" name="result" format="RData" />
        <data label="Spec Abundance of ${on_string}" name="spec_abundance" format="csv" />
        <data label="Metadata for ${tool.name} on ${on_string}" name="method_metadata" format="txt"/>
        <expand macro="output_msp"/>
    </outputs>

    <tests>
        <test>
            <param name="input_xcms" value="xcmsObj.rdata" ftype="RData"/>
            <output name="result" file="ramclustObj.RData" ftype="RData"/>
            <output name="method_metadata" file="metadata.txt" ftype="txt"/>
            <output name="spec_abundance" file="spec_abundance.csv" ftype="csv"/>
        </test>
    </tests>

    <help><![CDATA[
        TODO: Fill in help.
    ]]></help>
</tool>