<tool id="ramclustr_xcms" name="RAMClustR (XCMS)" version="@TOOL_VERSION@+galaxy1">
    <macros>
        <import>ramclustr_macros.xml</import>
    </macros>

    <requirements>
        <container type="docker">recetox/ramclustr:1.1.0-recetox0</container>
    </requirements>

    <inputs>
        <param name="input_xcms" label="input_xcms" type="data" format="RData" help=": containing grouped feature data for clustering by ramclustR" />
        <expand macro="parameters_required" />
        <expand macro="parameters_optional" />
    </inputs>

    <command detect_errors="aggressive"><![CDATA[
    
        Rscript 
            -e 'obj <- load("$input_xcms")'
            -e 'x <- RAMClustR::ramclustR(
                xcmsObj = xdata,
                #if $optional.st 
                    st = $optional.st,
                #end if
                #if $optional.maxt 
                    maxt = $optional.maxt,
                #end if
                sr = $required.sr,
                deepSplit = $required.deepSplit,
                blocksize = $required.blocksize,
                mult = $required.mult,
                hmax = $required.hmax,
                collapse = $required.collapse,
                usePheno = $required.usePheno,
                mspout = FALSE,
                qc.inj.range = $required.qc_inj_range,
                normalize = "$required.normalize",
                minModuleSize = $required.minModuleSize,
                linkage = "$required.linkage",
                mzdec = $required.mzdec,
                cor.method = "$required.cor_method",
                rt.only.low.n = $required.rt_only_low_n,
                #if $optional.fftempdir 
                    fftempdir = $optional.fftempdir,
                #end if
                replace.zeros = $required.replace_zeros
                )'
            -e 'save(x, file = "$result")'
            -e 'RAMClustR::write.methods(x, "$method_metadata")'
            -e 'RAMClustR::write.msp(x, one.file = $required.merge_msp)'
            -e 'write.csv(x\$SpecAbund, file="$spec_abundance", row.names=TRUE)'
    ]]>
    </command>

    <outputs>
        <data label="${tool.name} on ${on_string}" name="result" format="RData" />
        <data label="Spec Abundance of ${on_string}" name="spec_abundance" format="csv" />
        <data label="Metadata for ${tool.name} on ${on_string}" name="method_metadata" format="txt"/>
        <expand macro="output_msp"/>
    </outputs>

    <tests>
        <test>
            <param name="input_xcms" value="xcmsObj.rdata.xcms.fillpeaks" ftype="rdata.xcms.fillpeaks"/>
            <output name="result" file="ramclustObj.rdata" ftype="RData" compare="sim_size" delta="100"/>
            <discovered_dataset name="mass_spectra" file="msp.tgz" ftype="tgz"/>
            <output name="method_metadata" file="metadata.txt" ftype="txt" checksum="md5$81db28b08860988e3966f585b0f44b0f"/>
            <output name="spec_abundance" file="spec_abundance.csv" ftype="csv" compare="sim_size" delta="100"/>
        </test>
    </tests>

    <help>
        <![CDATA[
            TODO: Fill in help.
        ]]>
    </help>

    <citations>
        <!-- Example of annotating a citation using a BibTex entry. -->
        <citation type="bibtex">
            @article{Broeckling2014e,
            abstract = {Metabolomic data are frequently acquired using chromatographically coupled mass spectrometry (MS) platforms. For such datasets, the first step in data analysis relies on feature detection, where a feature is defined by a mass and retention time. While a feature typically is derived from a single compound, a spectrum of mass signals is more a more-accurate representation of the mass spectrometric signal for a given metabolite. Here, we report a novel feature grouping method that operates in an unsupervised manner to group signals from MS data into spectra without relying on predictability of the in-source phenomenon. We additionally address a fundamental bottleneck in metabolomics, annotation of MS level signals, by incorporating indiscriminant MS/MS (idMS/MS) data implicitly: feature detection is performed on both MS and idMS/MS data, and feature-feature relationships are determined simultaneously from the MS and idMS/MS data. This approach facilitates identification of metabolites using in-source MS and/or idMS/MS spectra from a single experiment, reduces quantitative analytical variation compared to single-feature measures, and decreases false positive annotations of unpredictable phenomenon as novel compounds. This tool is released as a freely available R package, called RAMClustR, and is sufficiently versatile to group features from any chromatographic-spectrometric platform or feature-finding software. {\textcopyright} 2014 American Chemical Society.},
            author = {Broeckling, C. D. and Afsar, F. A. and Neumann, S. and Ben-Hur, A. and Prenni, J. E.},
            doi = {10.1021/ac501530d},
            file = {:C$\backslash$:/Users/473355/Documents/Mendeley Desktop/Broeckling et al/2014{\_}RAMClust A novel feature clustering method enables spectral-matching-based annotation for metabolomics data(3).pdf:pdf},
            issn = {15206882},
            journal = {Analytical Chemistry},
            number = {14},
            pages = {6812--6817},
            pmid = {24927477},
            title = {{RAMClust: A novel feature clustering method enables spectral-matching-based annotation for metabolomics data}},
            volume = {86},
            year = {2014}
            }
        </citation>
 </citations>
</tool>