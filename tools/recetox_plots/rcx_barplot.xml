<tool id="rcx_barplot" name="recetox-barplot" version="@TOOL_VERSION@+galaxy0" profile="23.0">
    <description>Barplot visualization tool using ggplot2</description>
    <macros>
        <import>macros.xml</import>
        <import>help.xml</import>
    </macros>
    <expand macro="requirements" />
    <required_files>
        <include path="utils.r" />
    </required_files>
    <expand macro="creator" />

    <command detect_errors="exit_code"><![CDATA[
        Rscript -e 'source("${__tool_directory__}/utils.r")' -e 'source("${run_script}")'
        #if $export_R_script
        && cat ${run_script} >> $script
        #end if
    ]]></command>

    <configfiles>
        <configfile name="run_script"><![CDATA[
        file_name <- "$input_data"
        file_extension <- "$input_data.ext"
        data_input <- load_data(file_name, file_extension)
        
        quant_col <- colnames(data_input)[$quant_col]
        grouping_col <- colnames(data_input)[$grouping_col]
        data_input[[grouping_col]] <- as.factor(data_input[[grouping_col]])

        #if $color_col
        color_col <- colnames(data_input)[$color_col]
        data_input[[color_col]] <- as.factor(data_input[[color_col]])
        #end if

        plot_barplot <- ggplot2::ggplot(data_input, 
                                        ggplot2::aes(x = !!rlang::sym(grouping_col), 
                                                     y = !!rlang::sym(quant_col),
                                                     #if $color_col
                                                     fill = !!rlang::sym(color_col)
                                                     #end if
                                                     )) +
                                        ggplot2::geom_bar(stat="identity"
                                                         #if $position
                                                         , position = ggplot2::position_dodge()
                                                         #end if
                                                         ) +
                                        ggplot2::theme_bw()+
                                        ggplot2::theme(axis.text.x = ggplot2::element_text(angle = 45, hjust=1))
 
        #if $xlab
        plot_barplot <- plot_barplot + ggplot2::xlab("$xlab")
        #end if

        #if $ylab
        plot_barplot <- plot_barplot + ggplot2::ylab("$ylab")
        #end if

        ggplot2::ggsave(filename = "barplot.png", plot_barplot)

        ]]></configfile>
    </configfiles>

    <inputs>
        <expand macro="barplot_param"/>
    </inputs>

    <outputs>
        <data name="barplot" format="png" label="Barplot on ${on_string}" from_work_dir="barplot.png"/>        
        <data name="script" format="txt" label="R script">
            <filter>export_R_script</filter>
        </data>
    </outputs>

    <tests>
        <test expect_num_outputs="1">
            <param name="input_data" value="test_data.txt"/>
            <output name="barplot" ftype="png">
                <assert_contents>
                    <has_size size="1164615" delta="200"/>
                </assert_contents>
            </output>          
        </test>
    </tests>

    <help><![CDATA[
        @GENERAL_HELP@
    ]]></help>

    <expand macro="citations_upset" />
</tool>