<macros>
 
<token name="@BOXPLOT_HELP@">
recetox-boxplot help
=====================

Overview
--------

recetox-boxplot tool can be used to plot boxplots for the tabular data. On the input, a dataframe in tabular/csv/parquet format, containing only columns to be plotted (the pre-filtering can be achieved e.g. using the `Cut` Galaxy tool) is expected. If the data contains as the first column the rownames - meaning identificators, ProteinID, etc., please do set the `Does the first column of input table contain rownames?` to TRUE.  

Typically, a table where rows are features and columns are samples is expected - if one wishes to plot the boxplots for the features, we recommend to transpose the table beforehand.

Sometimes, it is better to transform the data for the visualization (or processing) purposes (`Should the quantitative variable be transformed?`). If no transformation option is selected, the data will be plotted as it is. Otherwise, one can choose from replacing all zero values by NA, log2 transformation or log10 transformation. Please note, that NA values are omitted while plotting.

`Plot the boxplots horizontally?` option means flipping the axes: a categorical variable (e.g. samples) would be on y-axis, whereas quantitative variable (e.g. intensity) would be on x-axis. This improves the legibility in case of larger datasets.

It is possible to use also a different variable for the plotting and coloring - in that case, a metadata table (in a tabular format) can be supplied. The metadata table must contain a column which will map to the data table column names (e.g. SampleName). 

It is also possible to use faceting, meaning splitting the plot based on multiple variables. One can then choose which variable to split the x axis and y axis on.

Example data table
-------------------

+----------------------+-------------------+-----------------------+--------------------+
| RowID                |    sample1        |    sample2            |    sample3         |
+======================+===================+=======================+====================+
| 1                    |    350.58         |    211.33             |    288.90          |
+----------------------+-------------------+-----------------------+--------------------+
| 2                    |    130.17         |    287.54             |    100.11          |
+----------------------+-------------------+-----------------------+--------------------+
| 3                    |    134.80         |    683.15             |    112.34          |
+----------------------+-------------------+-----------------------+--------------------+
| 4                    |    183.99         |    920.57             |    590.44          |
+----------------------+-------------------+-----------------------+--------------------+
| ...                  |    ...            |    ...                |    ...             |
+----------------------+-------------------+-----------------------+--------------------+


Example metadata table
-----------------------

+----------------------+-------------------+-----------------------+--------------------+
| SampleName           |    replicate      |    condition          |    batch           |
+======================+===================+=======================+====================+
| sample1              |    1              |    control            |    A               |
+----------------------+-------------------+-----------------------+--------------------+
| sample2              |    1              |    treatment          |    A               |
+----------------------+-------------------+-----------------------+--------------------+
| sample3              |    2              |    treatment          |    A               |
+----------------------+-------------------+-----------------------+--------------------+
</token>

<token name="@BARPLOT_HELP@">
recetox-barplot help
=====================

Overview
--------

recetox-barplot allows creating barplots from tabular/csv/parquet data. On the input, data in a long format are expected, meaning that each column represents a variable, each row represents an observation as shown below.

User has to define which column holds the quantitative information (e.g. counts for particular category) and which column contains the categories to be plotted. It is also possible to use another variable to color the bars. Finally, `Use position dodge?` parameter defines whether the bars will be stacked above each other (default behavior when set to FALSE) or will be placed side-by-side (when set to TRUE). If no color column is supplied, setting this parameter will have no effect on the resulting barplots. 

Example barplot input
----------------------

+----------------------+-------------------+-----------------------+--------------------+
| SampleName           |    replicate      |    condition          |    Value           |
+======================+===================+=======================+====================+
| sample1              |    1              |    control            |    20              |
+----------------------+-------------------+-----------------------+--------------------+
| sample2              |    1              |    treatment          |    40              |
+----------------------+-------------------+-----------------------+--------------------+
| sample3              |    2              |    treatment          |    10              |
+----------------------+-------------------+-----------------------+--------------------+
| ...                  | ...               |    ...                | ...                |
+----------------------+-------------------+-----------------------+--------------------+

</token>

<token name="@UPSETPLOT_HELP@">
recetox-upsetplot help
======================

Overview
--------

recetox-upsetplot tool allows to create UpSet plots. UpSet plots similarly as Venn diagrams can be used to visualize intersections of sets. They are in particular advantageous when plotting more than 3 sets, where Venn diagram become very complicated. UpSet plot is composed of 3 main parts: on the left, there are sets (our samples, conditions, ...) and their respective size. In the central part, there are intersections visualized - position of the black dot represent which sets belong to the particular intersection. On the top, there is barplot, visualizing the size of the particular intersections. More information can be found in the [documentation](https://github.com/hms-dbmi/UpSetR).

On the input, a dataframe in csv/tabular/parquet format is expected, where the columns correspond to sets to be plotted (i.e. intersections between columns will be done). If user does not supply the binary matrix, all non-zero values will be by default converted to 1.

There are several options which can be adjusted. The bars can be sorted either by frequency (order by the size, most frequent first) or degree (order by the number of sets involved, e.g. 3 intersections, then 2 intersection combinations, ...). `Empty intersections` argument specifies whether to plot also intersections which have zero elements, which are by default hidden. `Number of intersects` argument allows to limit the number of intersections which will be displayed - default 0 value resuls in showing all intersections. Finally, `Group by sets?` option allows ordering intersections in the plot according to the original sets, whereas by default the grouping is done by the number of sets in the intersection.

</token>

</macros>