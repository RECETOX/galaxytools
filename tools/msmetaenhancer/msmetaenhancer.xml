<tool id="msmetaenhancer" name="MSMetaEnhancer" version="@TOOL_VERSION@+galaxy1"  profile="21.09">
    <description>annotate MS data</description>

    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="creator"/>
    <xrefs>
        <xref type="bio.tools">msmetaenhancer</xref>
    </xrefs>

    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">msmetaenhancer</requirement>
    </requirements>

    <command detect_errors="exit_code"><![CDATA[
        sh ${msmetaenhancer_python_cli}
    ]]> </command>

    <environment_variables>
        <environment_variable name="MPLCONFIGDIR">\$_GALAXY_JOB_TMP_DIR</environment_variable>
        <environment_variable name="XDG_CACHE_HOME">\$_GALAXY_JOB_TMP_DIR</environment_variable>
    </environment_variables>

    <configfiles>
        <configfile name="msmetaenhancer_python_cli">
            python3 ${__tool_directory__}/msmetaenhancer_wrapper.py \
            --input_file "$input_file" \
            --file_format "$input_file.ext" \
            --output_file "$output_file" \
            #if $options.logging.output_log == "TRUE":
            --log_file "$log_file" \
            --log_level "$options.logging.log_level" \
            #end if
            #if len($ordered_jobs) != 0:
                #set ordered_jobs = ",".join([str($job.ordered_jobs_select) for $job in $ordered_jobs]) + ","
            #else:
                #set ordered_jobs = ""
            #end if
            #if $jobs != 'None':
                #set random_jobs = str($jobs)
            #else:
                #set random_jobs = ""
            #end if
            #set all_jobs = str($ordered_jobs) + str($random_jobs)
            --jobs "$all_jobs"
        </configfile>
    </configfiles>

    <inputs>
        <param label="Input spectra dataset" name="input_file" type="data" format="msp,mgf,json,csv,tsv,xlsx" />

        <repeat name="ordered_jobs" title="Ordered conversions">
            <param name="ordered_jobs_select" type="select" label="Available conversions" multiple="false" optional="true">
                <expand macro="job_options" />
            </param>
        </repeat>

        <param name="jobs" type="select" label="Other conversions" multiple="true" optional="true">
            <expand macro="job_options" />
        </param>

        <section name="options" title="Options">
            <conditional name="logging">
                <param label="Save the log file" name="output_log" type="select" help="Preserve a log with details about the annotation process.">
                    <option value="FALSE" selected="true">FALSE</option>
                    <option value="TRUE">TRUE</option>
                </param>
                <when value="TRUE">
                    <param name="log_level" type="select" label="Log level"
                           help="Severity of log messages  present in the log file.">
                        <option value="error">ERROR</option>
                        <option value="warning">WARNING</option>
                        <option value="info" selected="true">INFO</option>
                    </param>
                </when>
                <when value="FALSE"></when>
            </conditional>
        </section>
    </inputs>

    <outputs>
        <data label="MSMetaEnhancer on ${on_string}" name="output_file" format="msp">
            <change_format>
                <when input="input_file.ext" value="mgf" format="mgf" />
                <when input="input_file.ext" value="json" format="json" />
                <when input="input_file.ext" value="csv" format="tsv" />
                <when input="input_file.ext" value="tsv" format="tsv" />
                <when input="input_file.ext" value="xlsx" format="xlsx" />
            </change_format>
        </data>    
        <data label="Log of MSMetaEnhancer on ${on_string}" name="log_file" format="txt">
           <filter>options['logging']['output_log']</filter>
       </data>
    </outputs>

    <tests>
        <test expect_num_outputs="2">
            <param name="input_file" value="sample.msp" ftype="msp" />
            <param name="jobs" value="compound_name inchi PubChem,inchi canonical_smiles PubChem"/>
            <output name="output_file" file="sample_out.msp" ftype="msp"/>
        </test>
    </tests>

    <help>
        <![CDATA[
        @HELP@
        ]]>
    </help>

    <citations>
        <citation type="doi">https://doi.org/10.21105/joss.04494</citation>
    </citations>

</tool>
